openapi: 3.0.1
info:
    description: |
        ## Terms and Definitions

        Throughout this document and the Velo platform the following terms are used:

        * **Payor.** An entity (typically a corporation) which wishes to pay funds to one or more payees via a payout.
        * **Payee.** The recipient of funds paid out by a payor.
        * **Payment.** A single transfer of funds from a payor to a payee.
        * **Payout.** A batch of Payments, typically used by a payor to logically group payments (e.g. by business day). Technically there need be no relationship between the payments in a payout - a single payout can contain payments to multiple payees and/or multiple payments to a single payee.
        * **Sandbox.** An integration environment provided by Velo Payments which offers a similar API experience to the production environment, but all funding and payment events are simulated, along with many other services such as OFAC sanctions list checking.

        ## Overview

        The Velo Payments API allows a payor to perform a number of operations. The following is a list of the main capabilities in a natural order of execution:

        * Authenticate with the Velo platform
        * Maintain a collection of payees
        * Query the payor’s current balance of funds within the platform and perform additional funding
        * Issue payments to payees
        * Query the platform for a history of those payments

        This document describes the main concepts and APIs required to get up and running with the Velo Payments platform. It is not an exhaustive API reference. For that, please see the separate Velo Payments API Reference.

        ## API Considerations

        The Velo Payments API is REST based and uses the JSON format for requests and responses.

        Most calls are secured using OAuth 2 security and require a valid authentication access token for successful operation. See the Authentication section for details.

        Where a dynamic value is required in the examples below, the {token} format is used, suggesting that the caller needs to supply the appropriate value of the token in question (without including the { or } characters).

        Where curl examples are given, the –d @filename.json approach is used, indicating that the request body should be placed into a file named filename.json in the current directory. Each of the curl examples in this document should be considered a single line on the command-line, regardless of how they appear in print.

        ## Authenticating with the Velo Platform

        Once Velo backoffice staff have added your organization as a payor within the Velo platform sandbox, they will create you a payor Id, an API key and an API secret and share these with you in a secure manner.

        You will need to use these values to authenticate with the Velo platform in order to gain access to the APIs. The steps to take are explained in the following:

        create a string comprising the API key (e.g. **abcdef**) and API secret (e.g. 123456) with a colon between them. E.g. **abcdef:123456**

        base64 encode this string. E.g.: **YWJjZGVmOjEyMzQ1Ngo=**

        create an HTTP **Authorization** header with the value set to e.g. Basic **YWJjZGVmOjEyMzQ1Ngo=**

        perform the Velo authentication REST call using the HTTP header created above e.g. via curl:

        ```bash
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Basic YWJjZGVmOjEyMzQ1Ngo=" \
          'https://api.sandbox.velopayments.com/oauth/token?grant_type=client_credentials'
        ```

        If successful, this call will result in a **200** HTTP status code and a response body such as:

        ```json
          {
            "access_token":"19f6bafd-93fd-4747-b229-00507bbc991f",
            "token_type":"bearer",
            "expires_in":1799,
            "scope":"..."
          }
        ```
        ## API access following authentication
        Following successful authentication, the value of the access_token field in the response (indicated in green above) should then be presented with all subsequent API calls to allow the Velo platform to validate that the caller is authenticated.

        This is achieved by setting the HTTP Authorization header with the value set to e.g. Bearer 19f6bafd-93fd-4747-b229-00507bbc991f such as the curl example below:

        ```
          -H "Authorization: Bearer 19f6bafd-93fd-4747-b229-00507bbc991f "
        ```

        If you make other Velo API calls which require authorization but the Authorization header is missing or invalid then you will get a **401** HTTP status response.
    license:
        name: Apache License 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
    title: Velo Payments APIs
    version: 2.6.0.1-SNAPSHOT
    x-logo:
        url: https://velopayments.com/images/velo-logo.svg
servers:
    - description: Velo Payments Sandbox for testing
      url: https://api.sandbox.velopayments.com/
security:
    - oAuthVelo: []
tags:
    - description: |
          A payee is a person you wish to transfer money to. In this section you will find API opertions for working with Payees.
      name: Payee Service
    - description: A Payor is the entity which is sending money. Here you will find the
          available APIs for working with Payors.
      name: Payor Service
    - description: Payout Service APIs allow you to create and instruct payouts to payees.
      name: Payout Service
    - description: Payment Audit Service APIs allow you to see payment history to payees.
      name: Payment Audit Service
    - description: APIs which allows you to work with payees invited to the Velo Platform.
      name: Invite Service
    - description: |
          <p>This document, including all counts herein, and the Velo Payments API are the intellectual property
          of Velo Payments. The Velo Payment API and your use of the Velo Payment API, is goverend by and subject to the
          Velo Payments Terms of Use</p>
          <p>&copy; Velo Payments, Inc.</p>
      name: Legal
paths:
    /v1/payees:
        description: API Operations available to view and work with **Payee** information.
        get:
            description: Get a paginated response listing the payees for a payor.
            operationId: listPayees
            parameters:
                - description: Payor id (only mandatory if the payor is making the request).
                  in: query
                  name: payorId
                  required: false
                  schema:
                      format: uuid
                      type: string
                - description: The ofacStatus of the payees.
                  in: query
                  name: ofacStatus
                  required: false
                  schema:
                      type: string
                - description: |
                      List of sort fields (e.g. ?sort=onboardedStatus:asc,name:asc) Default is name:asc 'name' is treated as company name for companies - last name + ',' + firstName for individuals The supported sort fields are - payeeId, displayName, payoutStatus, onboardedStatus.
                  in: query
                  name: sort
                  required: false
                  schema:
                      type: string
                - in: query
                  name: requestParams
                  required: false
                  schema:
                      description: Must match the regular expression ```([a-zA-Z]+[:desc|:asc])```.
                      type: string
                - description: Page number. Default is 1.
                  in: query
                  name: pageNumber
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: Page size. Default is 25. Max allowable is 100.
                  in: query
                  name: pageSize
                  required: false
                  schema:
                      format: int32
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            example: |
                                {
                                  "page" : {
                                    "numberOfElements" : 2,
                                    "totalElements" : 45,
                                    "totalPages" : 23,
                                    "page" : 9,
                                    "pageSize" : 2
                                  },
                                  "links" : [ {
                                    "rel" : "first",
                                    "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=1&pageSize=2&sort=displayName:asc"
                                  }, {
                                    "rel" : "last",
                                    "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=23&pageSize=2&sort=displayName:asc"
                                  }, {
                                    "rel" : "self",
                                    "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=9&pageSize=2&sort=displayName:asc"
                                  }, {
                                    "rel" : "prev",
                                    "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=8&pageSize=2&sort=displayName:asc"
                                  }, {
                                    "rel" : "next",
                                    "href" : "https://api.sandbox.velopayments.com/v1/payees?payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b&page=10&pageSize=2&sort=displayName:asc"
                                  } ],
                                  "content" : [ {
                                    "payeeId" : "ee2cc9a1-34dd-4ab6-91e3-db111d08d995",
                                    "payorRefs" : [ {
                                      "payorId" : "13322f2a-8edb-41ef-aab4-9b070317a51a",
                                      "remoteId" : "remoteId"
                                    } ],
                                    "displayName" : null,
                                    "email" : "bob@example.com",
                                    "individual" : {
                                      "name" : {
                                        "title" : "Mr",
                                        "firstName" : "Barney",
                                        "otherNames" : "Grubb",
                                        "lastName" : "Cuthbert"
                                      }
                                    },
                                    "onboardedStatus" : "CREATED",
                                    "ofacStatus" : "PENDING"
                                  }, {
                                    "payeeId" : "e904966e-ae6a-4ddd-879c-fd1167c21849",
                                    "payorRefs" : [ {
                                      "payorId" : "13322f2a-8edb-41ef-aab4-9b070317a51a",
                                      "remoteId" : "remoteId"
                                    } ],
                                    "displayName" : null,
                                    "email" : "bob@example.com",
                                    "individual" : {
                                      "name" : {
                                        "title" : "Mr",
                                        "firstName" : "Barney",
                                        "otherNames" : "Grubb",
                                        "lastName" : "Cuthbert"
                                      }
                                    },
                                    "onboardedStatus" : "CREATED",
                                    "ofacStatus" : "PENDING"
                                  } ]
                                }
                            schema:
                                $ref: '#/components/schemas/PayeeResponse'
                    description: Details of Payee
            summary: Get List of Payees
            tags:
                - Payee Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payees?pageSize=2&page=8&payorId=1982b223-73b7-419d-a2e1-e64362b0ee8b' -i \
                      -H 'Content-Type: application/json' \
                      -H 'Authorization: Bearer 8a243e84-4bc5-4177-9bd0-0afe03870195'
                - lang: java
                  source: |
                      public static void main(String[] args) throws IOException {
                          String apiUrl = "https://api.sandbox.velopayments.com/v1/payees";

                          //Payor ID - Unique to your account
                          String payorId = "61e0690e-7d3f-4f87-8740-cf87565369d0";

                          //Get API Access Token
                          String apiAccessToken = AuthorizationExample.getApiToken();

                          // Query parameters
                          UriComponentsBuilder builder = UriComponentsBuilder.fromUriString(apiUrl)
                                  // Add query parameter
                                  .queryParam("payorId", payorId);

                          String apiUrlWithQueryParams = builder.toUriString();

                          System.out.println("API URL with query Parameters: " + apiUrlWithQueryParams);

                          //Set auth header
                          HttpHeaders httpHeaders = new HttpHeaders();
                          httpHeaders.add("Authorization", "Bearer " + apiAccessToken);
                          httpHeaders.add("Content-Type", "application/json");

                          //add request body and http headers
                          HttpEntity<String> httpEntity = new HttpEntity<>(null, httpHeaders);

                          //Create Spring RestTemplate
                          RestTemplate restTemplate = new RestTemplate();

                          //Using Apache HTTPClient for clear debug logging (this step is optional)
                          restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());

                          //Call Velo API, capature JSON response as String
                          String apiResponse = restTemplate.exchange(apiUrlWithQueryParams, HttpMethod.GET,
                                  httpEntity, String.class).getBody();

                          System.out.println(apiResponse);
                      }
        post:
            description: Initiate the process of creating 1 to 2000 payees in a batch Use
                the response location header to query for status.
            operationId: createPayees
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePayeesRequest'
                description: Submit list of Payees to add to velo
                required: true
            responses:
                201:
                    description: Created
                    headers:
                        location:
                            description: Batch Create URI Location
                            schema:
                                type: string
            summary: Create Payees
            tags:
                - Payee Service
        summary: Payee Service APIs
    /v2/payees:
        post:
            description: |
                Initiate the process of creating 1 to 2000 payees in a batch Use the response location header to query
                for status (201 - Created, 400 - invalid request body, 409 - if there is a duplicate remote id within the
                batch / if there is a duplicate email within the batch).
            operationId: v2CreatePayee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePayeesRequest'
                    multipart/formdata:
                        schema:
                            properties:
                                payorId:
                                    format: uuid
                                    type: string
                                file:
                                    description: CSV File of payee data
                                    items:
                                        $ref: '#/components/schemas/CreatePayeesRequest'
                                    type: array
                            type: object
                description: Post payees to create.
                required: true
            responses:
                201:
                    description: HTTP Created
            summary: Intiate Payee Creation
            tags:
                - V2 Payee Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v2/payees' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 829d8ec0-00a3-4c95-8234-ad09500bb627' \
                          -d '{"payorId":"7ddebfed-0624-4bce-848d-40ffe818a2df","payees":[{"type":"Individual","remoteId":"remoteId",
                          "email":"bob@example.com","address":{"line1":"100 Battery Street","line2":"line2","line3":"line3",
                          "line4":"line4","city":"San Francisco","countyOrProvince":"California","zipOrPostcode":"94018","country":"US"},
                          "paymentChannel":{"paymentChannelName":"My Payment Channel","accountNumber":"12345678","routingNumber":"123456789",
                          "countryCode":"US","currency":"USD","accountName":"Foo Account"},"individual":{"name":{"title":"Mr",
                          "firstName":"Barney","otherNames":"Grubb","lastName":"Cuthbert"},"nationalIdentification":"987654321",
                          "dateOfBirth":"1970-05-20"},"ofacOverride":false,"language":"FR"},{"type":"Company","remoteId":"remoteId",
                          "email":"bob@example.com","address":{"line1":"100 Battery Street","line2":"line2","line3":"line3",
                          "line4":"line4","city":"San Francisco","countyOrProvince":"California","zipOrPostcode":"94018","country":"US"},
                          "paymentChannel":{"paymentChannelName":"My Payment Channel","accountNumber":"12345678","routingNumber":"123456789",
                          "countryCode":"US","currency":"USD","accountName":"Foo Account"},"company":{"name":"ABC Payee Corp",
                          "taxId":"223344556"},"ofacOverride":false,"language":"FR"}]}'
    /v2/payees/batch/{batchId}:
        get:
            description: |
                Fetch the status of a specific batch of payees. The batch is fully processed when status is ACCEPTED and pendingCount is 0 ( 200 - OK, 404 - batch not found ).
            operationId: v2QueryBatchStatus
            parameters:
                - description: Batch Id
                  in: path
                  name: batchId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryBatchResponse'
                    description: Get Payor Details
            summary: Query Batch Status
            tags:
                - V2 Payee Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v2/payees/batch/6a84cb4c-9e6e-4499-8964-2ce5fd051de2' -i -X GET \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer f01caad1-5ae5-454d-9467-5053e459fe45'
    /v1/payors/{payorId}:
        get:
            description: |
                This API operation provide you the account balance of the given payor id.
            operationId: getPayor
            parameters:
                - description: The account owner Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Payor'
                    description: Get Payor Details
                    x-contracts:
                        - contractId: 1
                          body:
                              payorId: 0a818933-087d-47f2-ad83-2f986ed087eb
                404:
                    description: Payor Id Not Found
                    x-contracts:
                        - contractId: 2
                500:
                    description: Server Error
                    x-contracts:
                        - contractId: 3
                          body:
                              payorId: 0a818933-087d-47f2-ad83-2f986ed087eb
            summary: Get Payor Details by ID
            tags:
                - Payor Service
            x-contracts:
                - contractId: 1
                  name: Test Good Response
                  contractPath: /v1/payors/0a818933-087d-47f2-ad83-2f986ed087eb
                - contractId: 2
                  name: Test Not Found
                  contractPath: /v1/payors/00000000-0000-0000-0000-000000000000
                - contractId: 3
                  name: Test Bad Schema
                  contractPath: /v1/payors/16ea5c75-1476-4651-b117-bcb33d77f2b5
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/a3c35f60-c94e-418d-bb5b-00174d93a6eb' -i \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 40a61fcb-2a1a-454b-b049-01487986873e'
    /v1/payors/{payorId}/balance:
        get:
            description: |
                This API operation will allow you to query the system by Payor ID. The system will return a JSON response object
                with details about the given Payor.
            operationId: getPayorBalance
            parameters:
                - description: Payor Id
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            example: |
                                HTTP/1.1 200 OK
                                Content-Type: application/json;charset=UTF-8
                                Content-Length: 53

                                {
                                  "currentBalance" : 123.45,
                                  "currency" : "USD"
                                }
                            schema:
                                $ref: '#/components/schemas/PayorBalance'
                    description: Details of payor
                404:
                    description: Payor Id Not Found
            summary: Get Payor Balance
            tags:
                - Payor Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/cd34b0ce-cb18-4b98-b5b4-71c8bc03b829/balance' -i \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer bd18d4dc-870e-46f0-bb2b-5c5166e8d1ec'
    /v1/payors/{payorId}/payorFundingBankDetailsUpdate:
        post:
            description: |
                This API allows you to set or update the funding deteils for the given Payor ID.
            operationId: setPayorFundingBankDetails
            parameters:
                - description: Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PayorFundingBankDetailsUpdate'
                description: Update Funding bank details of given Payor Id
                required: true
            responses:
                202:
                    description: HTTP Accepted
                404:
                    description: Payor Id Not Found
            summary: Update the Funding bank details of the Payor.
            tags:
                - Payor Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/c64b31d1-d553-4205-ac22-b57020a9c7db/payorFundingBankDetailsUpdate' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 1d1e3d28-0d6a-4d45-b250-9962a2c545db' \
                       -d '{"routingNumber":"123456789","accountNumber":"12345","accountName":"Bob"}'
    /v1/payors/{payorId}/achFundingRequest:
        post:
            description: Instruct an ACH funding request to transfer funds from the payor’s
                funding bank to the payor’s balance held within Velo.
            operationId: payorAchFundingRequestApi
            parameters:
                - description: Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PayorAchFundingRequest'
                description: Post ammount to transfer via ACH using stored funding account
                    details.
                required: true
            responses:
                202:
                    description: HTTP Accepted
                404:
                    description: Payor Id Not Found
            summary: ACH Transfer to Velo
            tags:
                - Payor Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/ad49ca5e-4144-45d4-9cfa-ac63c2128cb8/achFundingRequest' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 58dc2c2d-8462-4e66-827e-f9e39a670ac1' \
                          -d '{"amount":150.67}'
    /v1/payors/{payorId}/applications:
        post:
            description: Create an application for the given Payor ID
            operationId: payorCreateApplicationRequest
            parameters:
                - description: Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PayorCreateApplicationRequest'
                description: Details of application to create
                required: true
                x-contracts:
                    - contractId: 1
                      body:
                          name: foo
                          description: a foo application
            responses:
                201:
                    description: Success
                    headers:
                        Location:
                            description: location
                            schema:
                                type: string
                    x-contracts:
                        - contractId: 1
                          mathers:
                              headers:
                                  - key: Location
                                    predefined: non_blank
            summary: Create Application
            tags:
                - Payor Service
            x-contracts:
                - contractId: 1
                  name: Test Create Application
                  contractPath: /v1/payors/835ac62e-616c-4261-bf38-63366db78c0d/applications
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/applications' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 93560bbb-5e79-492a-97b5-1ffbdf1cfeb8' \
                          -d '{"name":"foo","description":"a foo application"}'
    /v1/payors/{payorId}/applications/{applicationId}/keys:
        post:
            description: Create an an API key for the given payor Id and application Id
            operationId: payorCreateKeyRequest
            parameters:
                - description: Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
                - description: Application ID
                  in: path
                  name: applicationId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PayorCreateApiKeyRequest'
                description: Details of application API key to create
                required: true
            responses:
                200:
                    content:
                        application/json:
                            example: |
                                HTTP/1.1 200 OK
                                Content-Type: application/json;charset=UTF-8
                                Content-Length: 111

                                {
                                    "apiKey" : "385d4506-e7dd-446e-a092-5f30b98e7b26",
                                    "apiSecret" : "f25767d9-342a-48ac-a788-0a7a38ae6fb3"
                                }
                            schema:
                                $ref: '#/components/schemas/inline_response_200'
                    description: HTTP Ok, key created
                404:
                    description: Payor Id Not Found
            summary: Create API Key
            tags:
                - Payor Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payors/79a6fdaa-f4bb-47b7-9c1f-f6fd99c156a0/applications/ba08877f-9d96-41e4-9c26-44a872d856ae/keys' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 698f1609-c616-48f0-b8d5-03373e9fbd40' \
                          -d '{"name":"foo","description":"a foo key","roles":["foo.role"]}'
    /v1/payouts:
        post:
            description: Create a new payout and return a location header to instruct the
                payout.
            operationId: submitPayout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePayoutRequest'
                description: Post ammount to transfer via ACH using stored funding account
                    details.
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePayoutResponse'
                    description: Detailed response of payout instructions
            summary: Submit Payout
            tags:
                - Payout Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payouts' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer d0ff3ba0-2c24-4e48-a001-1746ec46bf73' \
                          -d '{"payorId":"fe8288cd-75e9-4a1a-ae21-83aed268e291","payments":[{"remoteId":"myRemoteId01","currency":"USD","amount":123.45},{"remoteId":"myRemoteId02","currency":"USD","amount":234.56},{"remoteId":"myRemoteId01","currency":"USD","amount":10.20},{"remoteId":"myRemoteId03","currency":"USD","amount":34.56},{"remoteId":"myRemoteId04","currency":"USD","amount":87.65}],"sourceCurrency":"USD"}'
    /v1/payouts/{payoutId}:
        post:
            description: Instruct Velo to execute perviously created payout.
            operationId: payoutInstruct
            parameters:
                - description: Payout ID
                  in: path
                  name: payoutId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                200:
                    description: HTTP Accepted
                404:
                    description: Payout Id Not Found
            summary: Instruct Payout
            tags:
                - Payout Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payouts/b6d2405e-bb53-4db3-878f-e4d07b941f85' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer a0626110-8abe-433c-873f-66047809295c'
    /v1/payouts/?:
        post:
            description: |
                ### CSV Payouts

                Create a new payout from a CSV source file and return a location header with a link to instruct the payout.

                Example CSV:
                ```
                    "remoteId","currency","amount","reference"
                    "remoteId1","USD","123.45","ref1"
                    "remoteId2","USD","234.56","ref2"
                ```

                ### CSV parsing errors
                #### Structural errors
                If there is a structural error meaning that no rows can be extracted then the service will reject the request with a 400 and the message:

                    `Unable to extract the file contents: Structural error in the CSV payout request`

                If there are errors that prevent individual rows from being parsed then those will be returned in the response but valid rows will still be submitted as part of the payout
                ```
                {
                     "payoutId": "167f57b2-88fa-4cc1-85aa-3fcf9f52693b",
                     "rejectedPayees": [],
                     "rejectedCsvRows": [
                       {
                         "lineNumber": 2,
                         "rejectedContent": "123456789,USD,111.11",
                         "message": "Number of data fields does not match number of headers."
                       }
                     ]
                   }
                   ```
                 Please note that line numbers are on a one-based index and refer to the line number in the text file.


                 #### Data validation errors
                 In the case of data validation errors (e.g. a negative amount) then the individual rows will be rejected but valid rows will be submitted as part of the payout (as with structurally invalid rows, described above)
                 ```
                {
                  "payoutId": "4ac71787-2f9b-49e9-9508-3c7b4689319d",
                  "rejectedPayees": [],
                  "rejectedCsvRows": [
                    {
                      "lineNumber": 2,
                      "rejectedContent": "123456789,USD,-111.11,ref1",
                      "message": "Amount must be greater than or equal to 0.01"
                    }
                  ]
                }
                ```
            operationId: payoutSubmitCSV
            parameters:
                - description: Payor ID
                  in: path
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
                - description: Currency Code
                  in: path
                  name: sourceCurrency
                  required: true
                  schema:
                      enum:
                          - USD
                      type: string
            requestBody:
                $ref: '#/components/requestBodies/inline_object'
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                            type: object
                required: true
            responses:
                200:
                    content:
                        application/json:
                            example: |
                                HTTP/1.1 201 Created
                                Location: https://api.sandbox.velopayments.com/v1/payouts/20bc1d70-4771-472a-9dce-92af1eef0ad0
                                Content-Type: application/json;charset=UTF-8
                                Content-Length: 311

                                {
                                  "payoutId" : "20bc1d70-4771-472a-9dce-92af1eef0ad0",
                                  "rejectedPayees" : [ {
                                    "reason" : "UNKNOWN_REMOTE_ID",
                                    "remoteId" : "myRemoteId03"
                                  }, {
                                    "email" : "foo@bar.com",
                                    "payeeId" : "8ab5e0c2-4f1a-44b6-b3a5-2666375479d9",
                                    "reason" : "OFAC_FAILED",
                                    "remoteId" : "myRemoteId03"
                                  } ]
                                }
                            schema:
                                $ref: '#/components/schemas/CreatePayoutResponse'
                    description: Detailed response of payout instructions
                400:
                    description: CSV Parsing Error
                404:
                    description: Payor Id Not Found
            summary: CSV Payout
            tags:
                - Payout Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/payouts?sourceCurrency=USD&payorId=e48f5b33-b5d1-4395-b4a2-1c6cb3d057e1' -i -X POST \
                          -H 'Content-Type: multipart/form-data' \
                          -H 'Authorization: Bearer 6e869ccc-8a90-42d3-807a-df80d2b192a8' \
                          -F 'file=@test.csv;type=text/plain' \
                          -F 'sourceCurrency=USD' \
                          -F 'payorId=e48f5b33-b5d1-4395-b4a2-1c6cb3d057e1'
    /v3/paymentaudit/payouts:
        get:
            description: |
                Get List of payouts for payor
            operationId: getPayoutsForPayor
            parameters:
                - description: Payor Id
                  in: query
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
                - description: Page number. Default is 1.
                  in: query
                  name: pageNumber
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: Page size. Default is 25. Max allowable is 100.
                  in: query
                  name: pageSize
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: |
                      List of sort fields (e.g. ?sort=submittedDateTime:asc,instructedDateTime:asc,status:asc)
                      Default is submittedDateTime:asc
                      The supported sort fields are: submittedDateTime, instructedDateTime, status.
                  in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPayoutsResponse'
                    description: Payor data found
                404:
                    description: Payor Id Not Found
            summary: Get Payouts for Payor
            tags:
                - Payment Audit Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v3/paymentaudit/payouts?payorId=449aa6c3-0569-47f6-a430-a470040da67c' -i -X GET \
                          -H 'Authorization: Bearer a9d9247d-5e30-4cea-a6e1-0898534ce768'
    /v1/paymentaudit/fundings:
        get:
            description: |
                Get a list of Fundings for a payor.
            operationId: getFundings
            parameters:
                - description: Payor Id
                  in: query
                  name: payorId
                  required: true
                  schema:
                      format: uuid
                      type: string
                - description: Page number. Default is 1.
                  in: query
                  name: pageNumber
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: Page size. Default is 25. Max allowable is 100.
                  in: query
                  name: pageSize
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: |
                      List of sort fields. Example: ```?sort=destinationCurrency:asc,destinationAmount:asc```
                      Default is no sort. The supported sort fields are: dateTime and amount.
                  in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFundingsResponse'
                    description: Get Fundings normal response
                404:
                    description: Payor Id Not Found
            summary: Get Fundings for Payor
            tags:
                - Payment Audit Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/paymentaudit/fundings?payorId=078cdcbf-972a-4a3f-a5cc-c345b83aae1c' -i \
                          -H 'Authorization: Bearer fae5a650-cee3-4bb1-9d37-597cc4e438e4'
    /v1/invites/{inviteId}:
        get:
            description: |
                Check if the link is still valid.
            operationId: validateInvite
            parameters:
                - description: The UUID of the invite.
                  in: path
                  name: inviteId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                204:
                    description: Invite Id found
                404:
                    description: Invite Id Not Found
            summary: Validate Invite
            tags:
                - Invite Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/invites/370cff6e-403a-4ab5-98f0-fcd99c0492e3' -i \
                          -H 'Content-Type: application/json'
        post:
            description: Update the invite with credentials needed for login.
            operationId: updateInvite
            parameters:
                - description: The UUID of the invite.
                  in: path
                  name: inviteId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                $ref: '#/components/requestBodies/inline_object_1'
                content:
                    application/json:
                        schema:
                            properties:
                                password:
                                    format: password
                                    maxLength: 128
                                    minLength: 8
                                    type: string
                            required:
                                - password
                            type: object
                required: true
            responses:
                204:
                    description: Invite Id found & updated
                404:
                    description: Invite Id Not Found
            summary: Update Invite
            tags:
                - Invite Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/invites/326a7453-b97b-4772-a24c-f8dd2b36ed2a' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -d '{"password": "myPassword"}'
    /v1/invites/{inviteId}/smsTokens:
        post:
            description: |
                Generate a OTP and send to the supplied phone number if valid.
            operationId: validateInviteSMS
            parameters:
                - description: The UUID of the invite.
                  in: path
                  name: inviteId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                $ref: '#/components/requestBodies/inline_object_2'
                content:
                    application/json:
                        schema:
                            properties:
                                cellphoneNumber:
                                    description: Cell Phone Number
                                    pattern: ^\+?[1-9]\d{1,14}$.
                                    type: string
                            type: object
                required: true
            responses:
                204:
                    description: Invite Id found
                404:
                    description: Invite Id Not Found
            summary: Validate Cellphone
            tags:
                - Invite Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/invites/880909dc-2a4b-4173-ad22-1c2ad779e79a/smsTokens' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -d '{"cellphoneNumber": "4478009787464"}'
    /v1/invites/{inviteId}/smsTokens/validate:
        post:
            description: Validate the OTP sent to the invited payee’s cellphone.
            operationId: validateSMSToken
            parameters:
                - description: The UUID of the invite.
                  in: path
                  name: inviteId
                  required: true
                  schema:
                      format: uuid
                      type: string
            requestBody:
                $ref: '#/components/requestBodies/inline_object_3'
                content:
                    application/json:
                        schema:
                            properties:
                                smsChallengeToken:
                                    pattern: '[0-9]{6}+'
                                    type: string
                            required:
                                - smsChallengeToken
                            type: object
                required: true
            responses:
                204:
                    description: Invite Id found & updated
                404:
                    description: Invite Id Not Found
            summary: Validate SMS Token
            tags:
                - Invite Service
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/invites/3fc7f95b-dbf7-4948-94d2-6042ae13e0b8/smsTokens/validate' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -d '{"smsChallengeToken": "123456"}'
    /v1/sourceAccounts/{sourceAccountId}:
        description: Get details about given source account.
        get:
            description: Get details about given source account.
            operationId: getSourceAccount
            parameters:
                - description: Source account id
                  in: path
                  name: sourceAccountId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            example: |-
                                HTTP/1.1 200 OK
                                Content-Type: application/json;charset=UTF-8
                                Content-Length: 317

                                {
                                  "id" : "fc6c3375-0e7c-49a1-b709-e8d76419517c",
                                  "balance" : 1203489,
                                  "currency" : "USD",
                                  "fundingRef" : "a1b2c3d4",
                                  "physicalAccountName" : "VELO_FBO_MYBANKA_USD",
                                  "railsId" : "SIM",
                                  "payorId" : "919698de-ba22-45be-9d1d-dae4ce95d071",
                                  "name" : "USD",
                                  "pooled" : true,
                                  "customerId" : "123456789"
                                }
                    description: Source account response
            summary: Get details about given source account.
            tags:
                - Funding Manager
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/sourceAccounts/126895a8-ba3d-44e8-9b34-84ee579cee7a' -i -X GET \
                          -H 'Authorization: Bearer a016f840-dafc-4b10-95f5-70ecc75a02d1'
        summary: Funding Manager - Get Source account.
    /v1/sourceAccounts:
        description: List Source Accounts
        get:
            description: List source accounts.
            operationId: listSourceAccounts
            parameters:
                - description: Physical Account Name
                  in: query
                  name: physicalAccountName
                  required: false
                  schema:
                      type: string
                - description: payor id
                  in: query
                  name: payorId
                  required: false
                  schema:
                      format: uuid
                      type: string
                - description: Page number. Default is 1.
                  in: query
                  name: pageNumber
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: Page size. Default is 25. Max allowable is 100.
                  in: query
                  name: pageSize
                  required: false
                  schema:
                      format: int32
                      type: integer
                - description: Sort String
                  in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            example: |-
                                HTTP/1.1 200 OK
                                Content-Type: application/json;charset=UTF-8
                                Content-Length: 1373

                                {
                                  "page" : {
                                    "numberOfElements" : 2,
                                    "totalElements" : 2,
                                    "totalPages" : 1,
                                    "page" : 1,
                                    "pageSize" : 0
                                  },
                                  "links" : [ {
                                    "rel" : "first",
                                    "href" : "https://api.sandbox.velopayments.com/v1/sourceAccounts?payorId=919698de-ba22-45be-9d1d-dae4ce95d071&page=1&pageSize=0&sort=fundingRef:asc"
                                  }, {
                                    "rel" : "last",
                                    "href" : "https://api.sandbox.velopayments.com/v1/sourceAccounts?payorId=919698de-ba22-45be-9d1d-dae4ce95d071&page=1&pageSize=0&sort=fundingRef:asc"
                                  }, {
                                    "rel" : "self",
                                    "href" : "https://api.sandbox.velopayments.com/v1/sourceAccounts?payorId=919698de-ba22-45be-9d1d-dae4ce95d071&page=1&pageSize=0&sort=fundingRef:asc"
                                  } ],
                                  "content" : [ {
                                    "id" : "29d91bb0-b87e-4a6a-b861-35b7984c87fc",
                                    "balance" : 1203489,
                                    "currency" : "USD",
                                    "fundingRef" : "a1b2c3d4",
                                    "physicalAccountName" : "VELO_FBO_MYBANKA_USD",
                                    "railsId" : "SIM",
                                    "payorId" : "919698de-ba22-45be-9d1d-dae4ce95d071",
                                    "name" : "USD",
                                    "pooled" : true,
                                    "customerId" : null
                                  }, {
                                    "id" : "cc54078e-9d1f-427f-8e93-7e4ebff174e6",
                                    "balance" : 1203489,
                                    "currency" : "USD",
                                    "fundingRef" : "a1b2c3d4",
                                    "physicalAccountName" : "VELO_FBO_MYBANKA_USD",
                                    "railsId" : "SIM",
                                    "payorId" : "919698de-ba22-45be-9d1d-dae4ce95d071",
                                    "name" : "USD",
                                    "pooled" : true,
                                    "customerId" : null
                                  } ]
                                }
                    description: List Source Account response
            summary: Get list of source accounts
            tags:
                - Funding Manager
            x-code-samples:
                - lang: shell
                  source: |
                      $ curl 'https://api.sandbox.velopayments.com/v1/sourceAccounts?payorId=919698de-ba22-45be-9d1d-dae4ce95d071' -i -X GET \
                          -H 'Authorization: Bearer 7214f1ec-a91c-4f65-8e70-3aba68cf239d'
        summary: Funding Manager - Get Source Accounts
    /v1/sourceAccounts/{sourceAccountId}/achFundingRequest:
        description: ACH Funding Operations
        post:
            description: Instruct an ACH funding request to transfer funds from the payor’s
                funding bank to the payor’s balance held within Velo (202 - accepted, 400
                - invalid request body, 404 - source account not found).
            operationId: createAchFundingRequest
            parameters:
                - description: Source account id
                  in: path
                  name: sourceAccountId
                  required: true
                  schema:
                      format: uuid
                      type: string
            responses:
                202:
                    content:
                        application/json:
                            example: |
                                HTTP/1.1 202 Accepted
                    description: Request Accepted
                404:
                    description: Source Account Not Found
            summary: Create ACH Funding Request
            tags:
                - Funding Manager
            x-code-samples:
                - lang: shell
                  source: |
                      curl 'https://api.sandbox.velopayments.com/v1/sourceAccounts/f25501fc-6b35-419b-b928-6ff58a7a62a9/achFundingRequest' -i -X POST \
                          -H 'Content-Type: application/json' \
                          -H 'Authorization: Bearer 74e61071-a771-4789-a9d5-9d7b5509671d' \
                          -d '{"amount":999990}'
        summary: ACH Funding
components:
    requestBodies:
        inline_object_1:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/inline_object_1'
        inline_object:
            content:
                multipart/form-data:
                    schema:
                        $ref: '#/components/schemas/inline_object'
        inline_object_3:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/inline_object_3'
        inline_object_2:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/inline_object_2'
    schemas:
        PayorCreateApiKeyResponse:
            example:
                apiKey: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                apiSecret: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
                apiKey:
                    description: API Key
                    format: uuid
                    type: string
                apiSecret:
                    description: API Secret
                    format: uuid
                    type: string
            type: object
        CreatePayoutRequest:
            example:
                payments:
                    - reference: reference
                      amount: 0.09008281904610114521059216485809884034097194671630859375
                      currency: USD
                      remoteId: remoteId
                    - reference: reference
                      amount: 0.09008281904610114521059216485809884034097194671630859375
                      currency: USD
                      remoteId: remoteId
                sourceCurrency: USD
                payorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
                payorId:
                    format: uuid
                    type: string
                payments:
                    items:
                        $ref: '#/components/schemas/PaymentInstruction'
                    type: array
                sourceCurrency:
                    enum:
                        - USD
                    type: string
            type: object
        RejectedPayee:
            example:
                reason: UNKNOWN_REMOTE_ID
                desciption: desciption
                payeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                email: email
                remoteId: remoteId
            properties:
                email:
                    format: email
                    type: string
                payeeId:
                    description: Velo Payee Id value.
                    format: uuid
                    type: string
                reason:
                    description: Reason code payment was rejected
                    enum:
                        - UNKNOWN_REMOTE_ID
                        - OFAC_FAILED
                        - CURRENCY_MISMATCH
                        - OTHER
                    type: string
                remoteId:
                    description: Payee Id value set by payor
                    type: string
                desciption:
                    type: string
            type: object
        Address:
            example:
                country: country
                countyOrProvince: countyOrProvince
                line4: line4
                city: city
                line3: line3
                line2: line2
                line1: line1
                zipOrPostcode: zipOrPostcode
            properties:
                line1:
                    maxLength: 255
                    minLength: 2
                    type: string
                line2:
                    maxLength: 255
                    minLength: 0
                    type: string
                line3:
                    maxLength: 255
                    minLength: 0
                    type: string
                line4:
                    maxLength: 255
                    minLength: 0
                    type: string
                city:
                    maxLength: 100
                    minLength: 2
                    type: string
                countyOrProvince:
                    maxLength: 100
                    minLength: 2
                    type: string
                zipOrPostcode:
                    maxLength: 30
                    minLength: 2
                    type: string
                country:
                    maxLength: 50
                    minLength: 2
                    type: string
            required:
                - city
                - country
                - line1
                - zipOrPostcode
            type: object
        PaymentChannel:
            example:
                paymentChannelName: paymentChannelName
                routingNo: routingNo
                accountName: accountName
                countryCode: countryCode
                iban: iban
                currency: USD
                accountNumber: accountNumber
            properties:
                paymentChannelName:
                    type: string
                iban:
                    description: Must match the regular expression ```^[A-Za-z0-9]+$```.
                    maxLength: 34
                    minLength: 15
                    type: string
                accountNumber:
                    maxLength: 17
                    minLength: 6
                    type: string
                routingNo:
                    maxLength: 9
                    minLength: 9
                    type: string
                countryCode:
                    description: Must be a 3 character currency code. ISO 4217
                    maxLength: 9
                    minLength: 9
                    type: string
                currency:
                    enum:
                        - USD
                    type: string
                accountName:
                    type: string
            required:
                - accountName
                - accountNumber
                - countryCode
                - currency
                - routingNo
                - type
            type: object
        PayeeDetail:
            description: Payee Detail Information returned by API
            properties:
                payeeId:
                    format: uuid
                    type: string
                payorRefs:
                    items:
                        $ref: '#/components/schemas/PayorRef'
                    type: array
                displayName:
                    type: string
                email:
                    type: string
                onboardedStatus:
                    type: string
                ofacStatus:
                    type: string
            type: object
        FundingAudit:
            properties:
                amount:
                    format: double
                    type: number
                dateTime:
                    format: date-time
                    type: string
                status:
                    enum:
                        - PENDING
                        - FAILED
                        - CREDIT
                        - DEBIT
                    type: string
                events:
                    items:
                        $ref: '#/components/schemas/FundingEvent'
                    type: array
            type: object
        PaymentInstruction:
            example:
                reference: reference
                amount: 0.09008281904610114521059216485809884034097194671630859375
                currency: USD
                remoteId: remoteId
            properties:
                remoteId:
                    description: Your identifier for payee
                    maxLength: 2000
                    minLength: 1
                    type: string
                currency:
                    description: Payee's currency
                    enum:
                        - USD
                    type: string
                amount:
                    description: Amount to send to Payee
                    format: double
                    minimum: 0.01
                    type: number
                reference:
                    maxLength: 15
                    minLength: 0
                    type: string
            required:
                - amount
                - currency
                - remoteId
            type: object
        PayorCreateApiKeyRequest:
            example:
                roles:
                    - roles
                    - roles
                name: name
                description: description
            properties:
                name:
                    description: A name for the key.
                    maxLength: 100
                    minLength: 2
                    type: string
                description:
                    description: Description of the key.
                    maxLength: 1024
                    minLength: 2
                    type: string
                roles:
                    description: A list of roles to assign to the key.
                    items:
                        type: string
                    maxItems: 2147483647
                    minItems: 1
                    type: array
            required:
                - name
            type: object
        CreatePayoutResponse:
            example:
                rejectedPayees:
                    - reason: UNKNOWN_REMOTE_ID
                      desciption: desciption
                      payeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                      email: email
                      remoteId: remoteId
                    - reason: UNKNOWN_REMOTE_ID
                      desciption: desciption
                      payeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                      email: email
                      remoteId: remoteId
                payoutId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
                payoutId:
                    description: Payout Id
                    format: uuid
                    type: string
                rejectedPayees:
                    items:
                        $ref: '#/components/schemas/RejectedPayee'
                    type: array
            type: object
        PayorFundingBankDetailsUpdate:
            example:
                routingNumber: '{}'
                accountName: '{}'
                accountNumber: '{}'
            properties:
                routingNumber:
                    description: Routing number for the payor’s bank
                    maxLength: 9
                    minLength: 9
                    type: object
                accountNumber:
                    description: Payor’s bank account number.
                    maxLength: 17
                    minLength: 4
                    type: object
                accountName:
                    description: Payor’s bank account name.
                    maxLength: 22
                    minLength: 1
                    type: object
            required:
                - accountName
                - accountNumber
                - routingNumber
            type: object
        QueryBatchResponse:
            example:
                failures:
                    - address:
                          country: country
                          countyOrProvince: countyOrProvince
                          line4: line4
                          city: city
                          line3: line3
                          line2: line2
                          line1: line1
                          zipOrPostcode: zipOrPostcode
                      individual:
                          name:
                              firstName: firstName
                              lastName: lastName
                              otherNames: otherNames
                              title: title
                          nationalIdentification: nationalIdentification
                          dateOfBirth: dateOfBirth
                      social:
                          facebookId: facebookId
                          twitterId: twitterId
                          linkedInId: linkedInId
                      ofacOverride: true
                      challenge:
                          description: description
                          value: value
                      type: Individual
                      locale: AR
                      failureMessage: failureMessage
                      email: email
                      remoteId: remoteId
                      paymentChannel:
                          paymentChannelName: paymentChannelName
                          routingNo: routingNo
                          accountName: accountName
                          countryCode: countryCode
                          iban: iban
                          currency: USD
                          accountNumber: accountNumber
                    - address:
                          country: country
                          countyOrProvince: countyOrProvince
                          line4: line4
                          city: city
                          line3: line3
                          line2: line2
                          line1: line1
                          zipOrPostcode: zipOrPostcode
                      individual:
                          name:
                              firstName: firstName
                              lastName: lastName
                              otherNames: otherNames
                              title: title
                          nationalIdentification: nationalIdentification
                          dateOfBirth: dateOfBirth
                      social:
                          facebookId: facebookId
                          twitterId: twitterId
                          linkedInId: linkedInId
                      ofacOverride: true
                      challenge:
                          description: description
                          value: value
                      type: Individual
                      locale: AR
                      failureMessage: failureMessage
                      email: email
                      remoteId: remoteId
                      paymentChannel:
                          paymentChannelName: paymentChannelName
                          routingNo: routingNo
                          accountName: accountName
                          countryCode: countryCode
                          iban: iban
                          currency: USD
                          accountNumber: accountNumber
                pendingCount: 6
                failureCount: 0
                status: SUBMITTED
            properties:
                status:
                    description: Batch Status
                    enum:
                        - SUBMITTED
                        - ACCEPTED
                    type: string
                failureCount:
                    format: int32
                    type: integer
                pendingCount:
                    format: int32
                    type: integer
                failures:
                    items:
                        $ref: '#/components/schemas/Payee'
                    type: array
            type: object
        PayorRef:
            properties:
                payorId:
                    type: string
                remoteId:
                    type: string
            type: object
        Name:
            example:
                firstName: firstName
                lastName: lastName
                otherNames: otherNames
                title: title
            properties:
                title:
                    maxLength: 10
                    minLength: 1
                    type: string
                firstName:
                    maxLength: 40
                    minLength: 1
                    type: string
                otherNames:
                    maxLength: 40
                    minLength: 1
                    type: string
                lastName:
                    maxLength: 40
                    minLength: 1
                    type: string
            required:
                - firstName
                - lastName
            type: object
        Challenge:
            example:
                description: description
                value: value
            properties:
                value:
                    maxLength: 20
                    minLength: 3
                    type: string
                description:
                    maxLength: 255
                    minLength: 1
                    type: string
            required:
                - description
                - value
            type: object
        FundingEvent:
            properties:
                eventId:
                    format: uudi
                    type: string
                eventDateTime:
                    format: date-time
                    type: string
                fundingEventType:
                    enum:
                        - PAYOR_FUNDING_DETECTED
                        - PAYOR_FUNDING_REQUESTED
                        - PAYOR_FUNDING_RETURN_RECEIVED
                        - FUNDING_RETURN_DETECTED
                        - PAYOR_FUNDING_REQUEST_SUBMITTED
                        - PAYOR_FUNDING_ENTRY_DETAIL_RECEIVED
                        - FUNDING_DEALLOCATED
                    type: string
            type: object
        PayoutSummaryAudit:
            properties:
                payoutId:
                    format: uuid
                    type: string
                payorId:
                    format: uuid
                    type: string
                dateTime:
                    format: date-time
                    type: string
                status:
                    enum:
                        - ACCEPTED
                        - REJECTED
                        - SUBMITTED
                        - QUOTED
                        - INSTRUCTED
                        - COMPLETED
                        - INCOMPLETE
                        - CONFIRMED
                    type: string
                submittedDateTime:
                    type: string
                instructedDateTime:
                    type: string
                totalPayments:
                    type: integer
                totalIncompletePayments:
                    type: integer
                totalFailedPayments:
                    type: integer
                sourceAccountSummary:
                    items:
                        $ref: '#/components/schemas/SourceAccountSummary'
                    type: array
                fxSummaries:
                    items:
                        $ref: '#/components/schemas/FxSummary'
                    type: array
                payoutMemo:
                    type: string
            type: object
        PayorAchFundingRequest:
            example:
                amount: 8008281.913008457981050014495849609375
            properties:
                amount:
                    description: Amount to be transferred.
                    format: double
                    maximum: 99999999.99
                    minimum: 0.01
                    type: number
            required:
                - amount
            type: object
        FxSummary:
            properties:
                quoteId:
                    format: uuid
                    type: string
                creationDateTime:
                    format: date-time
                    type: string
                rate:
                    format: double
                    type: number
                invertedRate:
                    format: double
                    type: number
                totalCost:
                    type: integer
                totalPaymentAmount:
                    type: integer
                sourceCurrency:
                    maxLength: 3
                    minLength: 3
                    type: string
                paymentCurrency:
                    maxLength: 3
                    minLength: 3
                    type: string
                status:
                    enum:
                        - QUOTED
                        - EXPIRED
                        - EXECUTED
                    type: string
                fundingStatus:
                    enum:
                        - FUNDED
                        - INSTRUCTED
                        - UNFUNDED
                    type: string
            type: object
        inline_response_200:
            example:
                content:
                    apiKey: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    apiSecret: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
                content:
                    $ref: '#/components/schemas/PayorCreateApiKeyResponse'
        PagedResponse_page:
            properties:
                numberOfElements:
                    format: int32
                    type: integer
                totalElements:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                page:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
        Social:
            example:
                facebookId: facebookId
                twitterId: twitterId
                linkedInId: linkedInId
            properties:
                twitterId:
                    maxLength: 256
                    minLength: 1
                    type: string
                facebookId:
                    maxLength: 256
                    minLength: 1
                    type: string
                linkedInId:
                    maxLength: 256
                    minLength: 1
                    type: string
            type: object
        inline_object_1:
            properties:
                password:
                    format: password
                    maxLength: 128
                    minLength: 8
                    type: string
            required:
                - password
            type: object
        PayorBalance:
            example:
                currentBalance: 0.80082819046101150206595775671303272247314453125
                currency: USD
            properties:
                currentBalance:
                    description: Payor’s current balance.
                    format: double
                    type: number
                currency:
                    description: Currency of payor’s current balance.
                    enum:
                        - USD
                    type: string
            type: object
        PayorCreateApplicationRequest:
            example:
                name: name
                description: description
            properties:
                name:
                    description: The name of the application.
                    maxLength: 100
                    minLength: 2
                    type: string
                description:
                    description: Description of the application.
                    maxLength: 1024
                    minLength: 2
                    type: string
            required:
                - name
            type: object
        GetPayoutsResponse:
            allOf:
                - $ref: '#/components/schemas/PagedResponse'
                - properties:
                      content:
                          items:
                              $ref: '#/components/schemas/PayoutSummaryAudit'
                          type: array
                  type: object
            type: object
        GetFundingsResponse:
            allOf:
                - $ref: '#/components/schemas/PagedResponse'
                - properties:
                      content:
                          $ref: '#/components/schemas/FundingAudit'
                  type: object
            type: object
        PayeeResponse:
            allOf:
                - $ref: '#/components/schemas/PagedResponse'
                - properties:
                      content:
                          items:
                              $ref: '#/components/schemas/PayeeDetail'
                          type: array
                  type: object
            type: object
        CreatePayeesRequest:
            example:
                payees:
                    - address:
                          country: country
                          countyOrProvince: countyOrProvince
                          line4: line4
                          city: city
                          line3: line3
                          line2: line2
                          line1: line1
                          zipOrPostcode: zipOrPostcode
                      individual:
                          name:
                              firstName: firstName
                              lastName: lastName
                              otherNames: otherNames
                              title: title
                          nationalIdentification: nationalIdentification
                          dateOfBirth: dateOfBirth
                      social:
                          facebookId: facebookId
                          twitterId: twitterId
                          linkedInId: linkedInId
                      ofacOverride: true
                      challenge:
                          description: description
                          value: value
                      type: Individual
                      locale: AR
                      failureMessage: failureMessage
                      email: email
                      remoteId: remoteId
                      paymentChannel:
                          paymentChannelName: paymentChannelName
                          routingNo: routingNo
                          accountName: accountName
                          countryCode: countryCode
                          iban: iban
                          currency: USD
                          accountNumber: accountNumber
                    - address:
                          country: country
                          countyOrProvince: countyOrProvince
                          line4: line4
                          city: city
                          line3: line3
                          line2: line2
                          line1: line1
                          zipOrPostcode: zipOrPostcode
                      individual:
                          name:
                              firstName: firstName
                              lastName: lastName
                              otherNames: otherNames
                              title: title
                          nationalIdentification: nationalIdentification
                          dateOfBirth: dateOfBirth
                      social:
                          facebookId: facebookId
                          twitterId: twitterId
                          linkedInId: linkedInId
                      ofacOverride: true
                      challenge:
                          description: description
                          value: value
                      type: Individual
                      locale: AR
                      failureMessage: failureMessage
                      email: email
                      remoteId: remoteId
                      paymentChannel:
                          paymentChannelName: paymentChannelName
                          routingNo: routingNo
                          accountName: accountName
                          countryCode: countryCode
                          iban: iban
                          currency: USD
                          accountNumber: accountNumber
                payorId: payorId
            properties:
                payorId:
                    type: string
                payees:
                    items:
                        $ref: '#/components/schemas/Payee'
                    type: array
            required:
                - payees
                - payorId
            type: object
        inline_object_3:
            properties:
                smsChallengeToken:
                    pattern: '[0-9]{6}+'
                    type: string
            required:
                - smsChallengeToken
            type: object
        SourceAccountSummary:
            properties:
                sourceAccountId:
                    format: uuid
                    type: string
                totalCost:
                    format: int32
                    type: number
                currency:
                    type: string
            required:
                - currency
                - sourceAccountId
                - totalCost
            type: object
        inline_object_2:
            properties:
                cellphoneNumber:
                    description: Cell Phone Number
                    pattern: ^\+?[1-9]\d{1,14}$.
                    type: string
            type: object
        Individual:
            example:
                name:
                    firstName: firstName
                    lastName: lastName
                    otherNames: otherNames
                    title: title
                nationalIdentification: nationalIdentification
                dateOfBirth: dateOfBirth
            properties:
                name:
                    $ref: '#/components/schemas/Name'
                nationalIdentification:
                    type: string
                dateOfBirth:
                    description: example - 1970-05-20
                    type: string
            type: object
        inline_object:
            properties:
                file:
                    format: binary
                    type: string
            type: object
        PagedResponse:
            properties:
                page:
                    $ref: '#/components/schemas/PagedResponse_page'
                links:
                    items:
                        type: object
                    type: array
            type: object
        Payee:
            example:
                address:
                    country: country
                    countyOrProvince: countyOrProvince
                    line4: line4
                    city: city
                    line3: line3
                    line2: line2
                    line1: line1
                    zipOrPostcode: zipOrPostcode
                individual:
                    name:
                        firstName: firstName
                        lastName: lastName
                        otherNames: otherNames
                        title: title
                    nationalIdentification: nationalIdentification
                    dateOfBirth: dateOfBirth
                social:
                    facebookId: facebookId
                    twitterId: twitterId
                    linkedInId: linkedInId
                ofacOverride: true
                challenge:
                    description: description
                    value: value
                type: Individual
                locale: AR
                failureMessage: failureMessage
                email: email
                remoteId: remoteId
                paymentChannel:
                    paymentChannelName: paymentChannelName
                    routingNo: routingNo
                    accountName: accountName
                    countryCode: countryCode
                    iban: iban
                    currency: USD
                    accountNumber: accountNumber
            properties:
                type:
                    enum:
                        - Individual
                        - Company
                    type: string
                remoteId:
                    maxLength: 100
                    minLength: 1
                    type: string
                email:
                    format: email
                    type: string
                address:
                    $ref: '#/components/schemas/Address'
                paymentChannel:
                    $ref: '#/components/schemas/PaymentChannel'
                individual:
                    $ref: '#/components/schemas/Individual'
                social:
                    $ref: '#/components/schemas/Social'
                challenge:
                    $ref: '#/components/schemas/Challenge'
                ofacOverride:
                    type: boolean
                locale:
                    enum:
                        - AR
                        - EN
                        - ES
                        - FR
                        - HE
                        - HI
                        - JA
                        - PT
                        - RU
                        - UR
                        - ZH
                    type: string
                failureMessage:
                    description: description of error if create request failed
                    type: string
            required:
                - address
                - company
                - email
                - locale
                - ofacOverride
                - remoteId
            type: object
        Payor:
            example:
                primaryContactName: primaryContactName
                payeeGracePeriodProcessingEnabled: true
                supportContact: supportContact
                address:
                    country: country
                    countyOrProvince: countyOrProvince
                    line4: line4
                    city: city
                    line3: line3
                    line2: line2
                    line1: line1
                    zipOrPostcode: zipOrPostcode
                fundingAccountAccountName: fundingAccountAccountName
                includesReports: true
                allowsLanguageChoice: true
                language: EN
                fundingAccountAccountNumber: fundingAccountAccountNumber
                dbaName: dbaName
                primaryContactPhone: primaryContactPhone
                payeeGracePeriodDays: 0
                fundingAccountRoutingNumber: fundingAccountRoutingNumber
                reminderEmailsOptOut: true
                manualLockout: true
                collectiveAlias: collectiveAlias
                payorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                kycState: FAILED_KYC
                primaryContactEmail: primaryContactEmail
                payorName: payorName
            properties:
                payorId:
                    format: uuid
                    type: string
                payorName:
                    description: The name of the payor.
                    type: string
                address:
                    $ref: '#/components/schemas/Address'
                primaryContactName:
                    description: Name of primary contact for the payor.
                    type: string
                primaryContactPhone:
                    description: Primary contact phone number for the payor.
                    type: string
                primaryContactEmail:
                    description: Primary contact email for the payor.
                    format: email
                    type: string
                fundingAccountRoutingNumber:
                    description: The funding account routing number to be used for the payor.
                    type: string
                fundingAccountAccountNumber:
                    description: The funding account number to be used for the payor.
                    type: string
                fundingAccountAccountName:
                    description: The funding account name to be used for the payor.
                    type: string
                kycState:
                    description: The kyc state of the payor.
                    enum:
                        - FAILED_KYC
                        - PASSED_KYC
                        - REQUIRES_KYC
                    type: string
                manualLockout:
                    description: Whether or not the payor has been manually locked by the backoffice.
                    type: boolean
                payeeGracePeriodProcessingEnabled:
                    description: Whether grace period processing is enabled.
                    type: boolean
                payeeGracePeriodDays:
                    description: The grace period for paying payees in days.
                    type: integer
                collectiveAlias:
                    description: How the payor has chosen to refer to payees.
                    type: string
                supportContact:
                    description: The payor’s support contact address.
                    type: string
                dbaName:
                    description: The payor’s 'Doing Business As' name.
                    type: string
                allowsLanguageChoice:
                    description: Whether or not the payor allows language choice in the UI.
                    type: boolean
                reminderEmailsOptOut:
                    description: Whether or not the payor has opted-out of reminder emails being
                        sent.
                    type: boolean
                language:
                    description: The payor’s language preference. Must be one of [EN, FR].
                    enum:
                        - EN
                        - FR
                    type: string
                includesReports:
                    type: boolean
            required:
                - address
                - language
                - payorId
                - payorName
                - primaryContactEmail
                - primaryContactPhone
                - primaryContactname
            type: object
    securitySchemes:
        oAuthVelo:
            description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
            flows:
                clientCredentials:
                    scopes:
                        ' ': Scopes not required
                    tokenUrl: https://api.sandbox.velopayments.com/oauth/token
            type: oauth2
